#!/usr/bin/env node

// script dependencies
var fs = require('fs');
var path = require('path');
var readline = require('readline');
var init = require('init-package-json');

// script constants
var APP_NAME = __dirname.split('/').pop();
var APP_DIR = __dirname + '/';
var TRAVIS_CONTENT = [
  'language: node_js',
  'node_js:',
  '- \"0.10\"',
  '',
  'branches:',
  '  only:',
  '    - master'
].join('\n');

// script variables
var rl = readline.createInterface(process.stdin, process.stdout),
  answers = [],
  questions = [
    'Are you using CoffeeScript? [Yn] ',
    'Please enter the name of new app [' + APP_NAME + '] ',
    'Would you like to store your app contributors in a lib directory? [Yn] ',
    'What is the name of the test directory? [spec] ',
    'What test framework would you like to use? [default is mocha] ',
    'Would you like me to create a bin directory? [Yn] ',
    'Would you like to include a Travis file? [Yn] ',
    'Would you like to run `npm init`? [Yn] ',
  ],
  qLen = questions.length;

function createAppDirectory(appName) {
  if (appName !== APP_NAME) {
    APP_DIR += appName + '/';
    fs.mkdirSync(APP_DIR);
  }
}

function processAnswer(el, idx, arr) {
  switch (idx) {
    case 1:
      createAppDirectory(el);
      if (arr[0] === 'Y' || arr[0] === 'y') {
        fs.mkdirSync(APP_DIR + 'src');
      }
      break;
    case 2:
      if (el === 'Y' || el === 'y') {
        fs.mkdirSync(APP_DIR + 'lib');
      }
      break;
    case 3:
      fs.mkdirSync(APP_DIR + el);
      break;
    case 4:
      break;
    case 5:
      if (el === 'Y' || el === 'y') {
        fs.mkdirSync(APP_DIR + 'bin');
      }
      break;
    case 6:
      if (el === 'Y' || el === 'y') {
        fs.writeFileSync(APP_DIR + '.travis.yml', TRAVIS_CONTENT);
      }
      break;
    case 7:
      if (el === 'Y' || el === 'y') {
        init(APP_DIR, '', function(err, data) {
          console.log(err);
          console.log(data);
        });
      }
      break;
  }
}

console.log(
  [
    '',
    'Hi, my job is to help you bootstrap a new NodeJS project.',
    '',
    'I will ask you a couple of questions that will help me setup ',
    'a proper directory structure for you.',
    '',
    'Press ^C at any time to quit.',
    ''
  ].join('\n')
);

rl.setPrompt(questions.shift());
rl.prompt();

rl.on('line', function(answer) {
  switch (questions.length) {
    case 7:
      answers.push(answer || 'Y');
      break;
    case 6:
      answers.push(answer || APP_NAME);
      break;
    case 5:
      answers.push(answer || 'Y');
      break;
    case 4:
      answers.push(answer || 'spec');
      break;
    case 3:
      answers.push(answer || 'mocha');
      break;
    case 2:
      answers.push(answer || 'Y');
      break;
    case 1:
      answers.push(answer || 'Y');
      break;
    case 0:
      answers.push(answer || 'Y');
      break;
  }

  if (questions.length === 0) {
    rl.close();
  } else {
    rl.setPrompt(questions.shift());
    rl.prompt();
  }
}).on('close', function() {
  answers.forEach(processAnswer);
});